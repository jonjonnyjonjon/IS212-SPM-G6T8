{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\spm_g6t8\\\\frontend\\\\src\\\\pages\\\\Engineer\\\\EngineerViewCourse.js\",\n    _s = $RefreshSig$();\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { useEffect, useState } from 'react';\nimport { useHistory, useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { Container, Badge } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EngineerViewCourse = () => {\n  _s();\n\n  const [courseID, setCourseID] = useState(useParams().courseID);\n  const [courseInfo, getCourseInfo] = useState(\"\");\n  const [coursePrereq, getPrereq] = useState([]);\n  useEffect(() => {\n    axios.get(`http://127.0.0.1:5000/courses/getCourse/?course_id=${courseID}`).then(res => {\n      console.log(res.data);\n      getCourseInfo(res.data);\n    }).catch(err => console.log(err));\n    axios.get(`http://127.0.0.1:5000/courses/getPrereq/?course_id=${courseID}`).then(res => {\n      getPrereq(retrievePrereq(res.data));\n    }).catch(err => console.log(err));\n  }, []);\n\n  const retrievePrereq = data => {\n    if (data.length > 1) {\n      let results = [];\n      data.forEach(elem => results.push(elem.prereq_course_id));\n      return results;\n    } else if (data.length == 1) {\n      return [data[0].prereq_course_id];\n    } else {\n      return ['None'];\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"mt-4\",\n      children: [\" \", courseInfo.course_name, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      className: \"mt-2\",\n      children: [\" \", courseInfo.course_id, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 63\n    }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n      children: \"Course Summary:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: courseInfo.course_summary\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n      children: \"Pre-requisite(s): \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), coursePrereq[0] === 'None' ? 'None' : coursePrereq.map(course => /*#__PURE__*/_jsxDEV(Badge, {\n      className: \"me-2\",\n      bg: \"success\",\n      children: course\n    }, courseID + course, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n      children: \"Trainer:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), \" \", courseInfo.trainer_name, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 55\n    }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n      children: \"Enrolment period: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), \" \", courseInfo.enrolment_start, \" - \", courseInfo.enrolment_end, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 97\n    }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n      children: \"Course Start Date:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), \" \", courseInfo.class_start, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 64\n    }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n      children: \"Course End Date:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), \" \", courseInfo.class_end, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 60\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 18\n    }, this), \"Populate quiz stuff here later\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n\n_s(EngineerViewCourse, \"MxKLDWnASeZICAMPqmWdxtG7XBs=\", false, function () {\n  return [useParams];\n});\n\n_c = EngineerViewCourse;\nexport default EngineerViewCourse;\n\nvar _c;\n\n$RefreshReg$(_c, \"EngineerViewCourse\");","map":{"version":3,"sources":["C:/Users/User/Documents/spm_g6t8/frontend/src/pages/Engineer/EngineerViewCourse.js"],"names":["useEffect","useState","useHistory","useParams","axios","Container","Badge","EngineerViewCourse","courseID","setCourseID","courseInfo","getCourseInfo","coursePrereq","getPrereq","get","then","res","console","log","data","catch","err","retrievePrereq","length","results","forEach","elem","push","prereq_course_id","course_name","course_id","course_summary","map","course","trainer_name","enrolment_start","enrolment_end","class_start","class_end"],"mappings":"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","sourcesContent":["import 'bootstrap/dist/css/bootstrap.min.css'\r\n\r\nimport { useEffect, useState } from 'react'\r\nimport { useHistory, useParams } from \"react-router-dom\"\r\nimport axios from \"axios\"\r\nimport { Container, Badge } from 'react-bootstrap'\r\n\r\nconst EngineerViewCourse = () => {\r\n    const [courseID, setCourseID] = useState(useParams().courseID)\r\n    const [courseInfo, getCourseInfo] = useState(\"\")\r\n    const [coursePrereq, getPrereq] = useState( [] )\r\n\r\n    useEffect(()=> {\r\n        axios.get(`http://127.0.0.1:5000/courses/getCourse/?course_id=${courseID}`, )\r\n        .then(res => {\r\n            console.log(res.data);\r\n            getCourseInfo(res.data);\r\n        }) .catch(err => console.log(err))\r\n\r\n        axios.get(`http://127.0.0.1:5000/courses/getPrereq/?course_id=${courseID}`, )\r\n        .then(res => {\r\n            getPrereq( retrievePrereq(res.data) );           \r\n        }) .catch(err => console.log(err))\r\n\r\n    }, [])\r\n    \r\n    const retrievePrereq = (data) => {\r\n        if ( data.length > 1 ){\r\n            let results = []\r\n            data.forEach(\r\n                elem => results.push(elem.prereq_course_id)\r\n            );\r\n\r\n            return results\r\n        } else if ( data.length == 1 ) {\r\n            return [data[0].prereq_course_id]\r\n        } else {\r\n            return ['None']\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <h1 className='mt-4'> {courseInfo.course_name} </h1>\r\n            <h4 className='mt-2'> {courseInfo.course_id} </h4><br />\r\n            <h5>Course Summary:</h5>\r\n            <p>{courseInfo.course_summary}</p>\r\n\r\n            <b>Pre-requisite(s): </b>\r\n            { coursePrereq[0] === 'None' ? 'None' :\r\n            coursePrereq.map( course =>\r\n                <Badge className='me-2' bg='success' key={courseID + course}>{course}</Badge>\r\n            )}\r\n            <br />\r\n            <b>Trainer:</b> {courseInfo.trainer_name} <br />\r\n        \r\n            <b>Enrolment period: </b> {courseInfo.enrolment_start} - {courseInfo.enrolment_end} <br />\r\n\r\n            <b>Course Start Date:</b> {courseInfo.class_start} <br/>\r\n            <b>Course End Date:</b> {courseInfo.class_end} <br/>\r\n\r\n            <br/><br/>\r\n            Populate quiz stuff here later\r\n\r\n        </Container>\r\n    )\r\n        \r\n}\r\n\r\nexport default EngineerViewCourse\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}