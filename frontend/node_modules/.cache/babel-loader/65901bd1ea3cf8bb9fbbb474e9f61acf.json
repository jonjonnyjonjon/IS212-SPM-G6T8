{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\spm_g6t8\\\\frontend\\\\src\\\\pages\\\\HR\\\\HREnrolClasses.js\",\n    _s = $RefreshSig$();\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { useEffect } from 'react';\nimport { Container, Tabs, Tab, Form } from 'react-bootstrap';\nimport { useParams } from 'react-router-dom';\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst HREnrolClasses = () => {\n  _s();\n\n  const {\n    courseID,\n    courseName\n  } = useParams();\n  const [classes, setClasses] = useState([]);\n  const [eligibleEngineers, setEligibleEngineers] = useState([]);\n  const [selectedEngineers, setSelectedEngineers] = useState([]); // const [searchKeyword, setSearchKeyword] = useState(\"\")\n\n  const [key, setKey] = useState(\"\");\n  useEffect(() => {\n    axios.get(`http://127.0.0.1:5000/classes/courseID?courseID=${courseID}`).then(res => {\n      setClasses(res.data);\n      setKey(res.data[0].class_id);\n    });\n  }, [courseID]); // get eligible engineers when\n\n  useEffect(() => {\n    axios.get(`http://127.0.0.1:5000/engineers/eligibleEngineers?courseID=${courseID}`).then(res => {\n      setEligibleEngineers(res.data);\n    });\n  }, [courseID]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Enrolment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [courseID, \" | \", courseName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Tabs, {\n      activeKey: key,\n      onSelect: k => setKey(k),\n      className: \"mt-3\",\n      children: classes.map(a_class => /*#__PURE__*/_jsxDEV(Tab, {\n        eventKey: a_class.class_id,\n        title: a_class.class_id,\n        children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\" // onChange={e => setKeyword(e.target.value)}\n          ,\n          placeholder: \"Search engineers\",\n          className: \"mt-3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: eligibleEngineers.map(engineer => /*#__PURE__*/_jsxDEV(Form.Check, {\n            type: \"checkbox\",\n            id: engineer.email,\n            label: engineer.email,\n            onClick: () => setSelectedEngineers(prev => [...prev, engineer.email])\n          }, engineer.email, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 25\n        }, this)]\n      }, courseID + a_class.class_id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n\n_s(HREnrolClasses, \"rQyEznkyP7H+GBhSAt+npIS6EIM=\", false, function () {\n  return [useParams];\n});\n\n_c = HREnrolClasses;\nexport default HREnrolClasses;\n\nvar _c;\n\n$RefreshReg$(_c, \"HREnrolClasses\");","map":{"version":3,"sources":["C:/Users/User/Documents/spm_g6t8/frontend/src/pages/HR/HREnrolClasses.js"],"names":["useEffect","Container","Tabs","Tab","Form","useParams","axios","useState","HREnrolClasses","courseID","courseName","classes","setClasses","eligibleEngineers","setEligibleEngineers","selectedEngineers","setSelectedEngineers","key","setKey","get","then","res","data","class_id","k","map","a_class","engineer","email","prev"],"mappings":"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","sourcesContent":["import 'bootstrap/dist/css/bootstrap.min.css'\r\nimport { useEffect } from 'react'\r\nimport { \r\n    Container,\r\n    Tabs,\r\n    Tab,\r\n    Form\r\n } from 'react-bootstrap'\r\nimport { useParams } from 'react-router-dom'\r\nimport axios from \"axios\"\r\nimport { useState } from \"react\"\r\n\r\nconst HREnrolClasses = () => {\r\n    const { courseID, courseName } = useParams()\r\n    const [classes, setClasses] = useState([])\r\n    const [eligibleEngineers, setEligibleEngineers] = useState([])\r\n    const [selectedEngineers, setSelectedEngineers] = useState([])\r\n    // const [searchKeyword, setSearchKeyword] = useState(\"\")\r\n    const [key, setKey] = useState(\"\")\r\n\r\n    useEffect(() => {\r\n        axios.get(`http://127.0.0.1:5000/classes/courseID?courseID=${courseID}`)\r\n            .then(res => {\r\n                setClasses(res.data)\r\n                setKey(res.data[0].class_id)\r\n            })\r\n    }, [courseID])\r\n\r\n    // get eligible engineers when\r\n    useEffect(() => {\r\n        axios.get(`http://127.0.0.1:5000/engineers/eligibleEngineers?courseID=${courseID}`)\r\n            .then(res => {\r\n                setEligibleEngineers(res.data)\r\n            })\r\n    }, [courseID])\r\n\r\n    return(\r\n        <Container>\r\n            <h1>Enrolment</h1>\r\n            <h3>{courseID} | {courseName}</h3>\r\n{/* \r\n            <Tabs activeKey={key} onSelect={(k) => setKey(k)} className=\"mt-3\">\r\n                <Tab eventKey=\"published\" title=\"Published\">\r\n                    <ClassesContainer filter=\"published\" classes={classes}/>\r\n                </Tab>\r\n                <Tab eventKey=\"ready\" title=\"Ready\">\r\n                    <ClassesContainer filter=\"ready\" classes={classes}/>\r\n                </Tab>\r\n                <Tab eventKey=\"pending\" title=\"Pending\">\r\n                    <ClassesContainer filter=\"pending\" classes={classes}/>\r\n                </Tab>\r\n            </Tabs> */}\r\n            <Tabs activeKey={key} onSelect={(k) => setKey(k)} className=\"mt-3\">\r\n                {classes.map(a_class => \r\n                    <Tab eventKey={a_class.class_id} title={a_class.class_id} key={courseID + a_class.class_id}>\r\n                        <Form.Control \r\n                            type=\"text\" \r\n                            // onChange={e => setKeyword(e.target.value)}\r\n                            placeholder=\"Search engineers\"\r\n                            className=\"mt-3\"\r\n                        />\r\n                        <div>\r\n                            {eligibleEngineers.map(engineer => \r\n                                <Form.Check \r\n                                    type=\"checkbox\"\r\n                                    key={engineer.email}\r\n                                    id={engineer.email}\r\n                                    label={engineer.email}\r\n                                    onClick={() => setSelectedEngineers(prev => [...prev, engineer.email])}\r\n                                />\r\n                            )}\r\n                        </div>\r\n                    </Tab>\r\n                )}\r\n            </Tabs>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default HREnrolClasses"]},"metadata":{},"sourceType":"module"}