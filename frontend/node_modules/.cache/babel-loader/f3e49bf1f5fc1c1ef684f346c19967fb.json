{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\spm_g6t8\\\\frontend\\\\src\\\\pages\\\\Trainer\\\\TrainerHome.js\",\n    _s = $RefreshSig$();\n\nimport TrainerCourseCard from \"../../components/TrainerCourseCard\";\nimport printer from \"../../img/printer.png\";\nimport { Container, Tabs, Tab } from \"react-bootstrap\";\nimport { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Header = styled.h2`\n  margin: 40px 0px 10px 0px;\n  font-weight: 800;\n`;\n_c = Header;\nconst CourseContainer = styled(Container)`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  gap: 80px;\n`;\nconst CourseTabs = styled(Tabs)`\n  margin: 20px 0px;\n`;\n\nfunction TrainerHome() {\n  _s();\n\n  const [key, setKey] = useState(\"ongoing\");\n  const [courses, setCourses] = useState([]);\n  useEffect(() => {\n    axios.get(\"http://127.0.0.1:5000/courses\").then(res => {\n      setCourses(res.data);\n    });\n  }, []); //   function sortCourses() {\n  //     const CourseMap = new Map();\n  //     CourseMap.set(\"ongoing\", [])\n  //     CourseMap.set(\"incomplete\", [])\n  //     var today = new Date()\n  //     for (let i = 0; i < courses.length; i++) {\n  //       let start = courses[i][\"startDate\"].split(\"/\")\n  //       var startDate = new Date(start[2], start[1]-1, start[0])\n  //       let end = courses[i][\"endDate\"].split(\"/\")\n  //       var endDate = new Date(end[2], end[1]-1, end[0])\n  //       // console.log(CourseMap.get(\"ongoing\"))\n  //       if (today > startDate & today < endDate) {\n  //         CourseMap.get(\"ongoing\").push(courses[i])\n  //       } \n  //       if (today < startDate) {\n  //         CourseMap.get(\"incomplete\").push(courses[i]);\n  //       }\n  //     }\n  //     return CourseMap;\n  //   }\n  //   var ongoingCourses = Array.from(sortCourses())[0][1]\n  //   var incompleteCourses = Array.from(sortCourses())[1][1]\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Header, {\n      children: \"Course Manager\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TrainerHome, \"BKDjNVCGm2A9WarqwvJg3t9ylCk=\");\n\n_c2 = TrainerHome;\nexport default TrainerHome;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Header\");\n$RefreshReg$(_c2, \"TrainerHome\");","map":{"version":3,"sources":["C:/Users/User/Documents/spm_g6t8/frontend/src/pages/Trainer/TrainerHome.js"],"names":["TrainerCourseCard","printer","Container","Tabs","Tab","useEffect","useState","styled","axios","Header","h2","CourseContainer","CourseTabs","TrainerHome","key","setKey","courses","setCourses","get","then","res","data"],"mappings":";;;AAAA,OAAOA,iBAAP,MAA8B,oCAA9B;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,SAASC,SAAT,EAAoBC,IAApB,EAA0BC,GAA1B,QAAqC,iBAArC;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,MAAM,GAAGF,MAAM,CAACG,EAAG;AACzB;AACA;AACA,CAHA;KAAMD,M;AAKN,MAAME,eAAe,GAAGJ,MAAM,CAACL,SAAD,CAAY;AAC1C;AACA;AACA;AACA;AACA,CALA;AAOA,MAAMU,UAAU,GAAGL,MAAM,CAACJ,IAAD,CAAO;AAChC;AACA,CAFA;;AAIA,SAASU,WAAT,GAAuB;AAAA;;AACrB,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBT,QAAQ,CAAC,SAAD,CAA9B;AACA,QAAM,CAACU,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,EAAD,CAAtC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdG,IAAAA,KAAK,CAACU,GAAN,CAAU,+BAAV,EAA2CC,IAA3C,CAAiDC,GAAD,IAAS;AACvDH,MAAAA,UAAU,CAACG,GAAG,CAACC,IAAL,CAAV;AACD,KAFD;AAGD,GAJQ,EAIN,EAJM,CAAT,CAJqB,CAUvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;AAEE,sBACE,QAAC,SAAD;AAAA,2BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAyCD;;GA5EQR,W;;MAAAA,W;AA8ET,eAAeA,WAAf","sourcesContent":["import TrainerCourseCard from \"../../components/TrainerCourseCard\";\r\nimport printer from \"../../img/printer.png\";\r\nimport { Container, Tabs, Tab } from \"react-bootstrap\";\r\nimport { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport axios from \"axios\";\r\n\r\nconst Header = styled.h2`\r\n  margin: 40px 0px 10px 0px;\r\n  font-weight: 800;\r\n`;\r\n\r\nconst CourseContainer = styled(Container)`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: flex-start;\r\n  gap: 80px;\r\n`;\r\n\r\nconst CourseTabs = styled(Tabs)`\r\n  margin: 20px 0px;\r\n`;\r\n\r\nfunction TrainerHome() {\r\n  const [key, setKey] = useState(\"ongoing\");\r\n  const [courses, setCourses] = useState([]);\r\n\r\n  useEffect(() => {\r\n    axios.get(\"http://127.0.0.1:5000/courses\").then((res) => {\r\n      setCourses(res.data);\r\n    });\r\n  }, []);\r\n\r\n//   function sortCourses() {\r\n//     const CourseMap = new Map();\r\n//     CourseMap.set(\"ongoing\", [])\r\n//     CourseMap.set(\"incomplete\", [])\r\n//     var today = new Date()\r\n//     for (let i = 0; i < courses.length; i++) {\r\n//       let start = courses[i][\"startDate\"].split(\"/\")\r\n//       var startDate = new Date(start[2], start[1]-1, start[0])\r\n//       let end = courses[i][\"endDate\"].split(\"/\")\r\n//       var endDate = new Date(end[2], end[1]-1, end[0])\r\n//       // console.log(CourseMap.get(\"ongoing\"))\r\n\r\n//       if (today > startDate & today < endDate) {\r\n//         CourseMap.get(\"ongoing\").push(courses[i])\r\n//       } \r\n//       if (today < startDate) {\r\n//         CourseMap.get(\"incomplete\").push(courses[i]);\r\n//       }\r\n//     }\r\n//     return CourseMap;\r\n//   }\r\n\r\n//   var ongoingCourses = Array.from(sortCourses())[0][1]\r\n//   var incompleteCourses = Array.from(sortCourses())[1][1]\r\n\r\n  return (\r\n    <Container>\r\n      <Header>Course Manager</Header>\r\n      {/* <CourseTabs\r\n        id=\"controlled-tab-example\"\r\n        activeKey={key}\r\n        onSelect={(k) => setKey(k)}\r\n        className=\"mb-3\"\r\n      >\r\n        <Tab eventKey=\"ongoing\" title=\"Ongoing\">\r\n        <CourseContainer>\r\n            {ongoingCourses.map(course => \r\n              <TrainerCourseCard\r\n                id={course.courseID}\r\n                img={printer}\r\n                title={course.courseName}\r\n                class={course.class}\r\n                startDate={course.startDate}\r\n                endDate={course.endDate}\r\n              ></TrainerCourseCard>\r\n            )}\r\n          </CourseContainer>\r\n        </Tab>\r\n\r\n        <Tab eventKey=\"incomplete\" title=\"Incomplete\"> \r\n        <CourseContainer>\r\n            {incompleteCourses.map(course => \r\n              <TrainerCourseCard\r\n                id={course.courseID}\r\n                img={printer}\r\n                title={course.courseName}\r\n                class={course.class}\r\n                startDate={course.startDate}\r\n                endDate={course.endDate}\r\n              ></TrainerCourseCard>\r\n            )}\r\n          </CourseContainer>\r\n        </Tab>\r\n      </CourseTabs> */}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default TrainerHome;\r\n"]},"metadata":{},"sourceType":"module"}