{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\spm_g6t8\\\\frontend\\\\src\\\\pages\\\\Trainer\\\\TrainerCreateQuiz.js\",\n    _s = $RefreshSig$();\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport TrainerMCQQuestion from '../../components/TrainerMCQQuestion';\nimport TrainerTFQuestion from '../../components/TrainerTFQuestion';\nimport { Form, Container, Button } from \"react-bootstrap\";\nimport { useState, useEffect } from 'react';\nimport axios from \"axios\";\nimport { Link, useRouteMatch, useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TrainerCreateQuiz = () => {\n  _s();\n\n  const {\n    url\n  } = useRouteMatch();\n  const {\n    courseID,\n    classID\n  } = useParams();\n  const [quizType, setQuizType] = useState(\"\");\n  const [quizDuration, setQuizDuration] = useState(0);\n  const [allQns, setAllQns] = useState([]);\n  const [qnNum, setQnNum] = useState(1);\n\n  const addMCQQuestion = () => {\n    setAllQns(allQns => [...allQns, /*#__PURE__*/_jsxDEV(TrainerMCQQuestion, {\n      qnNum: qnNum\n    }, qnNum, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 42\n    }, this)]);\n    setQnNum(qnNum + 1);\n  };\n\n  const addTFQuestion = () => {\n    // setTFQuestion( tfquestion => [...tfquestion, <TrainerTFQuestion />])\n    setAllQns(allQns => [...allQns, /*#__PURE__*/_jsxDEV(TrainerTFQuestion, {\n      qnNum: qnNum\n    }, qnNum, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 42\n    }, this)]);\n    setQnNum(qnNum + 1);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault(); // getting all information from each question\n\n    let allQns = document.getElementsByClassName(\"allQns\")[0].children;\n    let qnsInfo = [];\n\n    for (let i = 0; i < allQns.length; i++) {\n      let qnInputs = allQns[i].children;\n      let qnTitle = qnInputs[1].value;\n      let qnOptions = qnInputs[2].children;\n      let qnType = allQns[i].className;\n      let optionValues = [];\n      let answer = \"\";\n\n      for (let j = 0; j < qnOptions.length; j++) {\n        if (qnType === \"mcq\") {\n          let optionValue = qnOptions[j].getElementsByClassName(\"form-control\")[0].value;\n          let isOptionChecked = qnOptions[j].getElementsByClassName(\"input-group-text\")[0].children[0].checked;\n          optionValues.push(optionValue);\n\n          if (isOptionChecked) {\n            answer = optionValue;\n          }\n        } else if (qnType === \"tf\") {\n          optionValues = [\"True\", \"False\", \"\", \"\"]; // console.log(qnOptions[j].children[0].checked)\n\n          answer = qnOptions[j].children[0].checked ? \"True\" : answer;\n        }\n      }\n\n      qnsInfo.push({\n        \"qnTitle\": qnTitle,\n        \"optionValues\": optionValues,\n        \"answer\": answer\n      });\n    }\n\n    console.log(qnsInfo);\n    let title = '';\n    let options = [];\n    let qnanswer = '';\n    let option1 = '';\n    let option2 = '';\n    let option3 = '';\n    let option4 = '';\n\n    for (let k = 0; k < qnsInfo.length; k++) {\n      let qnID = 1;\n      title = qnsInfo[k].qnTitle;\n      qnID += k;\n      qnID = qnID.toString();\n      options = qnsInfo[k].optionValues;\n      qnanswer = qnsInfo[k].answer;\n\n      for (let l = 0; l < options.length; l++) {\n        option1 = options[0];\n        option2 = options[1];\n        option3 = options[2];\n        option4 = options[3];\n      }\n\n      axios.post(\"http://127.0.0.1:5000/quiz/createQuestion\", {\n        \"quiz_id\": '1',\n        \"question_id\": qnID,\n        \"question\": title,\n        \"type\": quizType,\n        \"duration\": parseInt(quizDuration),\n        \"option1\": option1,\n        \"option2\": option2,\n        \"option3\": option3,\n        \"option4\": option4,\n        \"answer\": qnanswer\n      });\n    }\n\n    console.log(\"sent to backend!\");\n    alert(\"quiz created! redirecting back to manage course\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Course: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Chapter 1 Quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: [\"Select your quiz type: \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 44\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"form-select\",\n          onClick: e => setQuizType(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"graded\",\n            children: \"Graded Quiz\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"ungraded\",\n            children: \"Ungraded Quiz\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n        children: [\"Duration of quiz (in minutes):\", /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"number\",\n          placeholder: \"30\",\n          onChange: e => setQuizDuration(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"allQns\",\n        children: allQns.map((a, i) => a)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outline-info\",\n        size: \"sm\",\n        onClick: addMCQQuestion,\n        children: \"Add MCQ Question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outline-info\",\n        size: \"sm\",\n        onClick: addTFQuestion,\n        children: \"Add True/False Question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        onClick: e => handleSubmit(e),\n        children: \"Preview Quiz\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TrainerCreateQuiz, \"fz+0C0mHKoQWtJXUF2RxhX0/0QI=\", false, function () {\n  return [useRouteMatch, useParams];\n});\n\n_c = TrainerCreateQuiz;\nexport default TrainerCreateQuiz;\n\nvar _c;\n\n$RefreshReg$(_c, \"TrainerCreateQuiz\");","map":{"version":3,"sources":["C:/Users/User/Documents/spm_g6t8/frontend/src/pages/Trainer/TrainerCreateQuiz.js"],"names":["TrainerMCQQuestion","TrainerTFQuestion","Form","Container","Button","useState","useEffect","axios","Link","useRouteMatch","useParams","TrainerCreateQuiz","url","courseID","classID","quizType","setQuizType","quizDuration","setQuizDuration","allQns","setAllQns","qnNum","setQnNum","addMCQQuestion","addTFQuestion","handleSubmit","e","preventDefault","document","getElementsByClassName","children","qnsInfo","i","length","qnInputs","qnTitle","value","qnOptions","qnType","className","optionValues","answer","j","optionValue","isOptionChecked","checked","push","console","log","title","options","qnanswer","option1","option2","option3","option4","k","qnID","toString","l","post","parseInt","alert","target","map","a"],"mappings":"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","sourcesContent":["import 'bootstrap/dist/css/bootstrap.min.css'\r\nimport TrainerMCQQuestion from '../../components/TrainerMCQQuestion'\r\nimport TrainerTFQuestion from '../../components/TrainerTFQuestion'\r\nimport {\r\n    Form,\r\n    Container,\r\n    Button\r\n} from \"react-bootstrap\"\r\nimport { useState, useEffect } from 'react'\r\nimport axios from \"axios\"\r\nimport { Link, useRouteMatch, useParams } from 'react-router-dom'\r\n\r\n\r\nconst TrainerCreateQuiz = () => {\r\n    \r\n    const { url } = useRouteMatch()\r\n    const { courseID, classID } = useParams()\r\n    const [quizType, setQuizType] = useState(\"\")\r\n    const [quizDuration, setQuizDuration] = useState(0)\r\n    \r\n    const [allQns, setAllQns] = useState([])\r\n\r\n\r\n    const [qnNum, setQnNum] = useState(1)\r\n\r\n    const addMCQQuestion = () => {\r\n        setAllQns( allQns => [...allQns, <TrainerMCQQuestion key={qnNum} qnNum={qnNum} />])\r\n        setQnNum(qnNum+1)\r\n    }\r\n\r\n    const addTFQuestion = () => {\r\n        // setTFQuestion( tfquestion => [...tfquestion, <TrainerTFQuestion />])\r\n        setAllQns( allQns => [...allQns, <TrainerTFQuestion key={qnNum} qnNum={qnNum} />])\r\n        setQnNum(qnNum+1)\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault()\r\n\r\n        // getting all information from each question\r\n        let allQns = document.getElementsByClassName(\"allQns\")[0].children\r\n        let qnsInfo = []\r\n        for (let i = 0; i < allQns.length; i++) {\r\n            let qnInputs = allQns[i].children\r\n            let qnTitle = qnInputs[1].value\r\n            let qnOptions = qnInputs[2].children\r\n            let qnType = allQns[i].className\r\n\r\n            let optionValues = []\r\n            let answer = \"\"\r\n            for (let j = 0; j < qnOptions.length; j++) {\r\n                if (qnType === \"mcq\") {\r\n                    let optionValue = qnOptions[j].getElementsByClassName(\"form-control\")[0].value\r\n                    let isOptionChecked = qnOptions[j].getElementsByClassName(\"input-group-text\")[0].children[0].checked\r\n                    optionValues.push(optionValue)\r\n\r\n                    if (isOptionChecked) {\r\n                        answer = optionValue\r\n                    }\r\n                } else if (qnType === \"tf\") {\r\n                    optionValues = [\"True\", \"False\", \"\", \"\"]\r\n                    // console.log(qnOptions[j].children[0].checked)\r\n                    answer = (qnOptions[j].children[0].checked) ? \"True\" : answer\r\n                }\r\n    \r\n            }\r\n\r\n            qnsInfo.push({\r\n                \"qnTitle\": qnTitle,\r\n                \"optionValues\": optionValues,\r\n                \"answer\": answer \r\n            })\r\n\r\n\r\n        }\r\n\r\n        console.log(qnsInfo)\r\n\r\n        let title = ''\r\n        let options = []\r\n        let qnanswer = ''\r\n        let option1 = ''\r\n        let option2 = ''\r\n        let option3 = ''\r\n        let option4 = ''\r\n\r\n        for (let k = 0; k < qnsInfo.length; k++) {\r\n            let qnID = 1\r\n\r\n            title = qnsInfo[k].qnTitle\r\n            qnID += k\r\n            qnID = qnID.toString()\r\n            options = qnsInfo[k].optionValues\r\n            qnanswer = qnsInfo[k].answer\r\n\r\n\r\n            for (let l=0; l < options.length; l++) {\r\n                option1 = options[0]\r\n                option2 = options[1]\r\n                option3 = options[2]\r\n                option4 = options[3]\r\n            }\r\n\r\n            axios.post(\"http://127.0.0.1:5000/quiz/createQuestion\", {\r\n                \"quiz_id\": '1',\r\n                \"question_id\": qnID,\r\n                \"question\": title,\r\n                \"type\": quizType,\r\n                \"duration\": parseInt(quizDuration),\r\n                \"option1\": option1,\r\n                \"option2\": option2,\r\n                \"option3\": option3,\r\n                \"option4\": option4,\r\n                \"answer\": qnanswer\r\n            })\r\n            \r\n        }\r\n        \r\n        console.log(\"sent to backend!\")\r\n        \r\n        alert(\"quiz created! redirecting back to manage course\")\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <h1>Course: {}</h1>\r\n            <h1>Chapter 1 Quiz</h1>\r\n            <Form>\r\n                <Form.Label>\r\n                    Select your quiz type: <br />\r\n                    <select className=\"form-select\" onClick={e => setQuizType(e.target.value)}>\r\n                        <option value=\"graded\">Graded Quiz</option>\r\n                        <option value=\"ungraded\" >Ungraded Quiz</option>\r\n                    </select>\r\n                </Form.Label>\r\n                <br />\r\n                <Form.Label>\r\n                    Duration of quiz (in minutes):\r\n                    <Form.Control type=\"number\" placeholder=\"30\" onChange={e => setQuizDuration(e.target.value)} />\r\n                </Form.Label>\r\n\r\n                <br />\r\n                \r\n                <div className=\"allQns\">\r\n                    {allQns.map((a, i) => (\r\n                        a\r\n                    ))}\r\n                </div>\r\n                <br />\r\n                <Button variant=\"outline-info\" size=\"sm\" onClick={addMCQQuestion}>Add MCQ Question</Button>\r\n                <br />\r\n                <Button variant=\"outline-info\" size=\"sm\" onClick={addTFQuestion}>Add True/False Question</Button>\r\n                <br />\r\n                <br />\r\n                <Button type=\"submit\" onClick={e => handleSubmit(e)}>\r\n                    Preview Quiz\r\n                </Button>\r\n            </Form>\r\n        </Container>\r\n    )\r\n}\r\n\r\n\r\nexport default TrainerCreateQuiz"]},"metadata":{},"sourceType":"module"}